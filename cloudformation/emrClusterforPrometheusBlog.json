{
	"Description": "CloudFormation template for creating an EMR cluster with node_exporter and jmx_exporter for Prometheus.",
	"Outputs": {
		"ClusterID": {
			"Description": "The Amazon EMR cluster ID",
			"Value": {
				"Ref": "EMRSampleCluster"
			}
		},
		"MasterPublicDnsName": {
			"Description": "The public DNS of master node of the Amazon EMR cluster.",
			"Value": {
				"Fn::GetAtt": [
					"EMRSampleCluster",
					"MasterPublicDNS"
				]
			}
		}
	},
	"Parameters": {
		"EMRClusterName": {
			"Default": "emrPrometheusBlog",
			"Description": "Name of the Amazon EMR cluster.",
			"Type": "String"
		},
		"EMRSubnet": {
			"Description": "Subnet ID for the Amazon EMR cluster",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"MasterInstanceType": {
			"Default": "m5.xlarge",
			"Description": "Instance Type of the master node",
			"Type": "String",
			"AllowedValues": [
				"c1.medium", "c1.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c3.xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "c5.xlarge", "c5.2xlarge", "c5.4xlarge", "c5.9xlarge", "c5.12xlarge", "c5.18xlarge", "c5.24xlarge", "c5d.xlarge", "c5d.2xlarge", "c5d.4xlarge", "c5d.9xlarge", "c5d.12xlarge", "c5d.18xlarge", "c5d.24xlarge", "c5n.xlarge", "c5n.2xlarge", "c5n.4xlarge", "c5n.9xlarge", "c5n.18xlarge", "cc2.8xlarge", "cr1.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "h1.2xlarge", "h1.4xlarge", "h1.8xlarge", "h1.16xlarge", "hs1.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "i3.xlarge", "i3.2xlarge", "i3.4xlarge", "i3.8xlarge", "i3.16xlarge", "i3en.xlarge", "i3en.2xlarge", "i3en.3xlarge", "i3en.6xlarge", "i3en.12xlarge", "i3en.24xlarge", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "m4.16xlarge", "m5.xlarge", "m5.2xlarge", "m5.4xlarge", "m5.8xlarge", "m5.12xlarge", "m5.16xlarge", "m5.24xlarge", "m5a.xlarge", "m5a.2xlarge", "m5a.4xlarge", "m5a.8xlarge", "m5a.12xlarge", "m5a.16xlarge", "m5a.24xlarge", "m5d.xlarge", "m5d.2xlarge", "m5d.4xlarge", "m5d.8xlarge", "m5d.12xlarge", "m5d.16xlarge", "m5d.24xlarge", "p2.xlarge", "p2.8xlarge", "p2.16xlarge", "p3.2xlarge", "p3.8xlarge", "p3.16xlarge", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "r4.xlarge", "r4.2xlarge", "r4.4xlarge", "r4.8xlarge", "r4.16xlarge", "r5.xlarge", "r5.2xlarge", "r5.4xlarge", "r5.8xlarge", "r5.12xlarge", "r5.16xlarge", "r5.24xlarge", "r5a.xlarge", "r5a.2xlarge", "r5a.4xlarge", "r5a.8xlarge", "r5a.12xlarge", "r5a.16xlarge", "r5a.24xlarge", "r5d.xlarge", "r5d.2xlarge", "r5d.4xlarge", "r5d.8xlarge", "r5d.12xlarge", "r5d.16xlarge", "r5d.24xlarge", "z1d.xlarge", "z1d.2xlarge", "z1d.3xlarge", "z1d.6xlarge", "z1d.12xlarge"
			]
		},
		"CoreInstanceType": {
			"Default": "m5.xlarge",
			"Description": "Instance Type of the core node.",
			"Type": "String",
			"AllowedValues": [
				"c1.medium", "c1.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c3.xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "c5.xlarge", "c5.2xlarge", "c5.4xlarge", "c5.9xlarge", "c5.12xlarge", "c5.18xlarge", "c5.24xlarge", "c5d.xlarge", "c5d.2xlarge", "c5d.4xlarge", "c5d.9xlarge", "c5d.12xlarge", "c5d.18xlarge", "c5d.24xlarge", "c5n.xlarge", "c5n.2xlarge", "c5n.4xlarge", "c5n.9xlarge", "c5n.18xlarge", "cc2.8xlarge", "cr1.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "h1.2xlarge", "h1.4xlarge", "h1.8xlarge", "h1.16xlarge", "hs1.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "i3.xlarge", "i3.2xlarge", "i3.4xlarge", "i3.8xlarge", "i3.16xlarge", "i3en.xlarge", "i3en.2xlarge", "i3en.3xlarge", "i3en.6xlarge", "i3en.12xlarge", "i3en.24xlarge", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "m4.16xlarge", "m5.xlarge", "m5.2xlarge", "m5.4xlarge", "m5.8xlarge", "m5.12xlarge", "m5.16xlarge", "m5.24xlarge", "m5a.xlarge", "m5a.2xlarge", "m5a.4xlarge", "m5a.8xlarge", "m5a.12xlarge", "m5a.16xlarge", "m5a.24xlarge", "m5d.xlarge", "m5d.2xlarge", "m5d.4xlarge", "m5d.8xlarge", "m5d.12xlarge", "m5d.16xlarge", "m5d.24xlarge", "p2.xlarge", "p2.8xlarge", "p2.16xlarge", "p3.2xlarge", "p3.8xlarge", "p3.16xlarge", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "r4.xlarge", "r4.2xlarge", "r4.4xlarge", "r4.8xlarge", "r4.16xlarge", "r5.xlarge", "r5.2xlarge", "r5.4xlarge", "r5.8xlarge", "r5.12xlarge", "r5.16xlarge", "r5.24xlarge", "r5a.xlarge", "r5a.2xlarge", "r5a.4xlarge", "r5a.8xlarge", "r5a.12xlarge", "r5a.16xlarge", "r5a.24xlarge", "r5d.xlarge", "r5d.2xlarge", "r5d.4xlarge", "r5d.8xlarge", "r5d.12xlarge", "r5d.16xlarge", "r5d.24xlarge", "z1d.xlarge", "z1d.2xlarge", "z1d.3xlarge", "z1d.6xlarge", "z1d.12xlarge"
			]
		},
		"CoreInstanceCount": {
			"Default": "2",
			"Description": "Number of core instances.",
			"Type": "Number"
		},
		"EMRKeyName": {
			"Description": "Name of an existing EC2 KeyPair to enable SSH to the instances.",
			"Type": "AWS::EC2::KeyPair::KeyName"
		},
		"EMRReleaseLabel": {
			"Description": "EMR Version",
			"AllowedValues": ["emr-5.30.1", "emr-6.0.0"],
			"Type": "String",
			"Default": "emr-6.0.0"
		},
		"EMRMasterAdditionalSGId": {
			"Description": "Security Group Id for the additional master security group.",
			"Type": "AWS::EC2::SecurityGroup::Id"
		},
		"EMRSlaveAdditionalSGId": {
			"Description": "Security Group Id for the additional slave security group.",
			"Type": "AWS::EC2::SecurityGroup::Id"
		}
	},
	"Resources": {
		"EMRSampleCluster": {
			"Properties": {
				"Applications": [{
					"Name": "Hadoop"
				}],
				"BootstrapActions": [
					{
						"Name": "Configure cluster",
						"ScriptBootstrapAction": {
							"Path": "s3://aws-bigdata-blog/artifacts/aws-blog-emr-prometheus-grafana/scripts/bootstrap_monitoring_6_series.sh"
						}
					}
				],
				"Configurations": [{
					"Classification": "hadoop-env",
					"Configurations": [{
						"Classification": "export",
						"ConfigurationProperties": {
							"HADOOP_NAMENODE_OPTS": "\"-javaagent:/etc/prometheus/jmx_prometheus_javaagent-0.13.0.jar=7001:/etc/hadoop/conf/hdfs_jmx_config_namenode.yaml -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=50103\"",
							"HADOOP_DATANODE_OPTS": "\"-javaagent:/etc/prometheus/jmx_prometheus_javaagent-0.13.0.jar=7001:/etc/hadoop/conf/hdfs_jmx_config_datanode.yaml -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=50103\""
						}
					}]
				}],
				"Instances": {
					"CoreInstanceGroup": {
						"EbsConfiguration": {
							"EbsBlockDeviceConfigs": [{
								"VolumeSpecification": {
									"SizeInGB": "100",
									"VolumeType": "gp2"
								},
								"VolumesPerInstance": "1"
							}],
							"EbsOptimized": "true"
						},
						"InstanceCount": {
							"Ref": "CoreInstanceCount"
						},
						"InstanceType": {
							"Ref": "CoreInstanceType"
						},
						"Market": "ON_DEMAND",
						"Name": "Core Instance"
					},
					"Ec2KeyName": {
						"Ref": "EMRKeyName"
					},
					"Ec2SubnetId": {
						"Ref": "EMRSubnet"
					},
					"MasterInstanceGroup": {
						"InstanceCount": "1",
						"InstanceType": {
							"Ref": "MasterInstanceType"
						},
						"Market": "ON_DEMAND",
						"Name": "Master Instance"
					},
					"TerminationProtected": "false",
					"AdditionalMasterSecurityGroups": [{
						"Ref": "EMRMasterAdditionalSGId"
					}],
					"AdditionalSlaveSecurityGroups": [{
						"Ref": "EMRSlaveAdditionalSGId"
					}]
				},
				"JobFlowRole": "EMR_EC2_DefaultRole",
				"Name": {
					"Ref": "EMRClusterName"
				},
				"ReleaseLabel": {
					"Ref": "EMRReleaseLabel"
				},
				"ServiceRole": "EMR_DefaultRole",
				"Tags": [{
						"Key": "Name",
						"Value": "EMR cluster for Prometheus Blog"
					},
					{
						"Key": "application",
						"Value": "hadoop"
					}
				],
				"VisibleToAllUsers": "true"
			},
			"Type": "AWS::EMR::Cluster"
		}
	}
}